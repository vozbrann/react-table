{"version":3,"sources":["utils/localStorage.js","components/UserForm.jsx","components/MyTable.jsx","App.jsx","index.js"],"names":["setUserList","userList","localStorage","setItem","JSON","stringify","newId","id","parse","getItem","schema","yup","firstName","required","min","max","lastName","phone","gender","age","integer","UserForm","validationSchema","onSubmit","values","setSubmitting","resetForm","props","initialValues","handleSubmit","handleChange","setFieldValue","touched","errors","Form","noValidate","Row","Group","as","Col","md","Label","Control","type","name","value","onChange","isInvalid","Feedback","country","target","isValid","inputNumber","length","controlId","className","ButtonGroup","toggle","ToggleButton","variant","checked","maxLength","Button","Component","MyTable","this","Table","striped","bordered","responsive","onClick","sortTextUserList","sortNumberUserList","map","user","key","href","onDelete","block","App","setState","prevState","newList","filter","sortField","sort","a","b","localeCompare","state","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9002437.chunk.js","sourcesContent":["const userKey = \"userList\";\r\n\r\nexport function getUserList() {\r\n  return JSON.parse(localStorage.getItem(userKey)) || [];\r\n}\r\n\r\nexport function setUserList(userList) {\r\n  localStorage.setItem(userKey, JSON.stringify(userList));\r\n}\r\n\r\nexport function newId() {\r\n  let id = JSON.parse(localStorage.getItem(\"id\")) || \"0\";\r\n  localStorage.setItem(\"id\", JSON.stringify(++id));\r\n  return id;\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport {newId} from '../utils/localStorage';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nimport './userForm.scss'\r\n\r\nconst schema = yup.object({\r\n  firstName: yup.string().required().min(3, \"min name length is 3\").max(20, \"max name length is 20\"),\r\n  lastName: yup.string().required().min(3, \"min last name length is 3\").max(20, \"max last name length is 20\"),\r\n  phone: yup.string().required(),\r\n  gender: yup.bool().required(),\r\n  age: yup.number().integer().required().min(1, \"should be in range 1 - 130\").max(130, \"should be in range 1 - 130\"),\r\n});\r\n\r\nclass UserForm extends Component {\r\n  render() {\r\n    return (\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          this.props.onSubmit({id:newId(), ...values});\r\n          resetForm();\r\n        }}\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          phone: '',\r\n          gender: true,\r\n          age: '',\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          setFieldValue,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\">\r\n                <Form.Label>First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.firstName && errors.firstName}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.firstName}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"6\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <PhoneInput\r\n                  country={'ua'}\r\n                  value={values.phone}\r\n                  name=\"phone\"\r\n                  onChange={phone => handleChange({target: {value: phone, name: \"phone\"}})}\r\n                  isValid={(inputNumber) => {\r\n                    return !touched.lastName || inputNumber.length === 12;\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.lastName && errors.lastName}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.lastName}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" controlId=\"validationFormik03\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <div className=\"d-flex flex-column\">\r\n                  <ButtonGroup toggle>\r\n                    <ToggleButton\r\n                      variant=\"outline-info\"\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      onChange={() => setFieldValue(\"gender\", true)}\r\n                      checked={values.gender}\r\n                      value={true}>\r\n                      Male\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                      variant=\"outline-info\"\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      onChange={() => setFieldValue(\"gender\", false)}\r\n                      checked={!values.gender}\r\n                      value={false}>\r\n                      Female\r\n                    </ToggleButton>\r\n                  </ButtonGroup>\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" controlId=\"validationFormik03\">\r\n                <Form.Label>Age</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  maxLength=\"3\"\r\n                  min=\"1\"\r\n                  max=\"130\"\r\n                  name=\"age\"\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.age && errors.age}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.age}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button type=\"submit\">Submit form</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './myTable.scss'\r\n\r\nclass MyTable extends Component {\r\n  render() {\r\n    return (\r\n      !!this.props.userList.length &&\r\n      <Table className=\"mt-5\" striped bordered responsive>\r\n        <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th onClick={()=>this.props.sortTextUserList(\"firstName\")}>\r\n            <div className=\"d-flex justify-content-between\">First Name<i\r\n              className=\"material-icons\">\r\n              keyboard_arrow_down\r\n            </i></div>\r\n          </th>\r\n          <th onClick={()=>this.props.sortTextUserList(\"lastName\")}>\r\n            <div className=\"d-flex justify-content-between\">Last Name<i\r\n              className=\"material-icons\">\r\n              keyboard_arrow_down\r\n            </i></div>\r\n          </th>\r\n          <th onClick={()=>this.props.sortTextUserList(\"phone\")}>\r\n            <div className=\"d-flex justify-content-between\">Phone<i\r\n              className=\"material-icons\">\r\n              keyboard_arrow_down\r\n            </i></div>\r\n          </th>\r\n          <th onClick={()=>this.props.sortTextUserList(\"gender\")}>\r\n            <div className=\"d-flex justify-content-between\">Gender<i\r\n              className=\"material-icons\">\r\n              keyboard_arrow_down\r\n            </i></div>\r\n          </th>\r\n          <th onClick={()=>this.props.sortNumberUserList(\"age\")}>\r\n            <div className=\"d-flex justify-content-between\">Age<i\r\n              className=\"material-icons\">\r\n              keyboard_arrow_down\r\n            </i>\r\n            </div></th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {this.props.userList.map(user => {\r\n          return (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.firstName}</td>\r\n              <td>{user.lastName}</td>\r\n              <td><a href={\"tel:\"+user.phone} className=\"Blondie\">{user.phone}</a></td>\r\n              <td>{user.gender ? \"Male\" : \"Female\"}</td>\r\n              <td>{user.age}</td>\r\n              <td className=\"p-0\"><Button onClick={()=>this.props.onDelete(user.id)} className=\"mt-1\" variant='danger' block>Delete</Button></td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTable;\r\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UserForm from './components/UserForm';\nimport Container from 'react-bootstrap/Container';\nimport MyTable from './components/MyTable';\n\nimport './app.scss'\n\nimport {getUserList, setUserList} from './utils/localStorage'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: getUserList() || [],\n    }\n  }\n\n  onSubmit = (user) => {\n    this.setState((prevState) => {\n      const newList = [user, ...prevState.userList];\n      setUserList(newList);\n      return {userList: newList};\n    });\n  };\n\n  onDelete = (id) => {\n    this.setState((prevState) => {\n      const newList = prevState.userList.filter(user => user.id !== id);\n      setUserList(newList);\n      return {userList: newList};\n    });\n  };\n\n  sortTextUserList = (sortField) => {\n    this.setState((prevState) => {\n      let userList = prevState.userList;\n      userList.sort((a, b) => ('' + a[sortField]).localeCompare(b[sortField]));\n      return {userList};\n    });\n  };\n\n  sortNumberUserList = (sortField) => {\n    this.setState((prevState) => {\n      let userList = prevState.userList;\n      userList.sort((a, b) => a[sortField] - b[sortField]);\n      return {userList};\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-center mb-5\">User form</h1>\n        <Container fluid=\"lg\">\n          <UserForm onSubmit={this.onSubmit}/>\n          <MyTable\n            sortTextUserList={this.sortTextUserList}\n            sortNumberUserList={this.sortNumberUserList}\n            onDelete={this.onDelete}\n            userList={this.state.userList}/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}